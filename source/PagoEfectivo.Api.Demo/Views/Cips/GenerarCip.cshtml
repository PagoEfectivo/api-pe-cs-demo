
@model PagoEfectivo.Api.Demo.Models.Entity.CipViewModel;
@{
ViewData["Title"] = "PÃ¡gina ConsultarCip";
Layout = "~/Views/Shared/_Layout.cshtml"; 
}
<div class="header-custom">
  <button class="btn btn-outline-warning" id="sidebarCollapseTitle" type="button">
    <div class="menu-icon"></div>
    <div class="menu-icon"></div>
    <div class="menu-icon"></div>
  </button><span class="header-title">Generar CIP</span>
</div>
<div class="content-main">
  @using (Html.BeginForm("GenerarCip", "Cips", FormMethod.Post))
  {
  <div class="form-group">
    <label for="Currency">Tipo de moneda</label>@Html.DropDownListFor(m => m.Currency, new List<SelectListItem>
    {
    new SelectListItem() {Text = "PEN", Value="PEN"},
    new SelectListItem() {Text = "USD", Value="USD"}
    }, new { @id = "Amount", @class = "form-control"})
  </div>
  <div class="form-group">
    <label for="Amount">Monto:</label>@Html.TextBoxFor(m => m.Amount, new { @id = "Amount", @class = "form-control", @Value = "" })
  </div>
  <div class="form-group">
    <label for="TransactionCode">Codigo de transaccion:</label>@Html.TextBoxFor(m => m.TransactionCode, new { @id = "TransactionCode", @class = "form-control", @Value = "" })
  </div>
  <div class="form-group">
    <label for="UserEmail">Correo de usuario:</label>@Html.TextBoxFor(m => m.UserEmail, new { @id = "UserEmail", @class = "form-control", @Value = "" })
  </div>
  <div class="form-check">
    <label class="form-check-label">
      <input class="form-check-input" type="checkbox" onchange="availableOptional(this)">Habilitar campos opcionales
    </label>
  </div><br>
  <div class="optional-fields" hidden="">
    <div class="form-group">
      <label for="firstInput">Fecha de expiracion</label>
      <div class="row">
        <div class="col-sm-12">@Html.TextBoxFor(m => m.DateExpiry, new { @id = "datetimepicker", @class = "form-control datetimepicker-input", data_toggle = "datetimepicker", data_target = "#datetimepicker" })</div>
        <script type="text/javascript">
          $(function () {
          $('#datetimepicker').datetimepicker({
                  locale: 'pt',
                  format: 'YYYY-MM-DDThh:mm:ssZ',
              });
          });
        </script>
      </div>
    </div>
    <div class="form-group">
      <label for="AdminEmail">Correo administrador:</label>@Html.TextBoxFor(m => m.AdminEmail, new { @id = "AdminEmail", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="PaymentConcept">Concepto de pago:</label>@Html.TextBoxFor(m => m.PaymentConcept, new { @id = "PaymentConcept", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="AdditionalData">informacion adicional:</label>@Html.TextBoxFor(m => m.AdditionalData, new { @id = "AdditionalData", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserName">Nombre de usuario:</label>@Html.TextBoxFor(m => m.UserName, new { @id = "UserName", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserLastName">Apellidos de usuario:</label>@Html.TextBoxFor(m => m.UserLastName, new { @id = "UserLastName", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserUbigeo">Ubigeo de usuario:</label>@Html.TextBoxFor(m => m.UserUbigeo, new { @id = "UserUbigeo", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserCountry">Pais de usuario:</label>@Html.TextBoxFor(m => m.UserCountry, new { @id = "UserCountry", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserDocumentType">Tipo de documento de usuario:</label>@Html.DropDownListFor(m => m.UserDocumentType, new List<SelectListItem>
      {
      new SelectListItem() {Text = "DNI", Value="DNI"},
      new SelectListItem() {Text = "PAS", Value="PAS"},
      new SelectListItem() {Text = "LMI", Value="LMI"},
      new SelectListItem() {Text = "PAR", Value="PAR"},
      new SelectListItem() {Text = "NAN", Value="NAN"}
      }, new { @id = "Amount", @class = "form-control"})
    </div>
    <div class="form-group">
      <label for="UserDocumentNumber">Nombre de documento de usuario:</label>@Html.TextBoxFor(m => m.UserDocumentNumber, new { @id = "UserDocumentNumber", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserPhone">Numero de usuario:</label>@Html.TextBoxFor(m => m.UserPhone, new { @id = "UserPhone", @class = "form-control", @Value = "" })
    </div>
    <div class="form-group">
      <label for="UserCodeCountry">Codigo de pais de usuario:</label>@Html.TextBoxFor(m => m.UserCodeCountry, new { @id = "UserCodeCountry", @class = "form-control", @Value = "" })
    </div>
  </div>@Html.HiddenFor(m => m.Authenticate.IdService, new { @id = "idService" })
  @Html.HiddenFor(m => m.Authenticate.AccessKey, new { @id = "accessKey" })
  @Html.HiddenFor(m => m.Authenticate.SecretKey, new { @id = "secretKey" })
  <button class="btn btn-default" type="submit">Generar</button>}<br>    @if (@ViewBag.response != null)
      {
  <div class="card">
    <div class="card-body">
      <label class="font-weight-bold" for="firstInput">Response</label><br>
      <div class="form-group">
        <label for="firstInput">Code:</label>
        <input class="form-control" id="email" type="text" value="@ViewBag.code" readonly="">
      </div>
      <div class="form-group">
        <label for="firstInput">Message:</label>
        <input class="form-control" id="email" type="text" value="@ViewBag.status" readonly="">
      </div>
      <div class="form-group">
        <label for="firstInput">Data:</label>
        <pre><code id="code">                               </code></pre>
      </div>
    </div>
  </div>
  <script>
    var response = @(Html.Raw(ViewBag.response));
    var str = JSON.stringify(response, null, 2);
    $('#code').text(str);
  </script>    }
</div>
<script>
  $(document).ready(function () {
    $('#idService').val(getCookie('serviceId'));
    $('#accessKey').val(getCookie('accessKey'));
    $('#secretKey').val(getCookie('secretKey'));
  })
  function availableOptional(checkboxElem){
    console.log(checkboxElem.checked)
    if (checkboxElem.checked) {
      $('.optional-fields').removeAttr('hidden');
    } else {
      $('.optional-fields').attr('hidden', 'true');
    }
  }
</script>